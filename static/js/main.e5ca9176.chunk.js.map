{"version":3,"sources":["Components/Card/card.component.jsx","Components/Card-List/cardlist.component.jsx","Components/Search-Box/SearchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFeild","target","value","state","fetch","then","Response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAIaA,EAAO,SAAAC,GAAK,OAEzB,sBAAKC,UAAY,iBAAjB,UAEI,qBAAKC,IAAI,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJTC,G,MAAW,SAAAR,GACvB,OAAO,qBAAKC,UAAU,OAAf,SAAuBD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAK,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCJtEM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAcC,EAAiB,EAAjBA,aAErC,OACI,uBAAOZ,UAAU,SAEjBa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCHG,E,kDApCf,aAAc,IAAD,8BACX,gBAcFH,aAAe,SAACI,GAEd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrC,EAAKC,MAAQ,CAEXb,SAAW,GACXU,YAAa,IANJ,E,qDAWb,WAAoB,IAAD,OACjBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAWkB,S,oBAQhI,WACE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBACpG,OACE,sBAAK9B,UAAU,MAAf,UACE,kDAEA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAce,KAAKf,eAC5D,cAAC,EAAD,CAAUJ,SAAYoB,W,GA9BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e5ca9176.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n\r\n<div className = 'card-container'>\r\n\r\n    <img alt=\"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2&size=120x120`}/>\r\n    <h1>{props.monster.name}</h1>    \r\n    <p>{props.monster.email}</p>\r\n\r\n</div>\r\n\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../Card/card.component';\r\n\r\nimport './cardlist.styles.css';\r\n\r\nexport const CardList = props => {\r\n return(<div className='card'>{props.monsters.map(monster => (<Card key = {monster.id} monster = {monster}></Card>))}</div>)\r\n} ","import React from \"react\";\r\nimport './Search-Box-Styles.css';\r\n\r\nexport const SearchBox = ({placeholder , handleChange}) =>{\r\n\r\n    return(\r\n        <input className='search' \r\n    \r\n        type='search'\r\n        placeholder={placeholder} \r\n        onChange={handleChange}\r\n   \r\n        />\r\n    )\r\n\r\n}","import './App.css';\nimport {CardList} from './Components/Card-List/cardlist.component'\nimport { Component } from 'react';\nimport {SearchBox} from './Components/Search-Box/SearchBox.component'\n\nclass App extends Component{\n\nconstructor(){\n  super();\n\n  this.state = {\n    // string : \"This text has been changed upon pressing the button\"\n    monsters : [ ],\n    searchFeild: ''\n  }\n\n}\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users').then(Response => Response.json()).then(users => this.setState({monsters : users}))\n}\n\nhandleChange = (e) =>\n{\n  this.setState({searchFeild: e.target.value})\n}\n\nrender() {\n  const { monsters, searchFeild } = this.state;\n  const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchFeild.toLowerCase()))\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1> \n      {/* <input type='search' placeholder='search monsters' onChange={this.handleChange}/> */}\n      <SearchBox placeholder='search monsters' handleChange={this.handleChange} />\n      <CardList monsters = {filteredMonsters}>\n      </CardList>\n    </div>\n  );\n}\n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}